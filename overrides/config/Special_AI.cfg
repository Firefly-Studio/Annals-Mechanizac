# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=0.0

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
        minecraft:chicken 1.0
        minecraft:cow 1.0
        minecraft:pig 1.0
        minecraft:sheep 1.0
        minecraft:rabbit 1.0
        minecraft:squid 1.0
     >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=true

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=true

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:wooden_door, minecraft:iron_door, minecraft:trapdoor, minecraft:fence_gate, minecraft:iron_trapdoor, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, betternether:stalagnate_planks_gate, betternether:reeds_gate, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, openblocks:ladder, securitycraft:iron_door_reinforced, securitycraft:reinforced_iron_trapdoor, securitycraft:reinforced_fence_gate, securitycraft:scanner_door, securitycraft:keypad_door, quark:spruce_trapdoor, quark:birch_trapdoor, quark:jungle_trapdoor, quark:acacia_trapdoor, quark:dark_oak_trapdoor, quark:nether_brick_fence_gate, erebus:door_amber, erebus:door_petrified_wood, erebus:door_baobab, erebus:door_eucalyptus, erebus:door_mahogany, erebus:door_mossbark, erebus:door_asper, erebus:door_cypress, erebus:door_rotten, erebus:door_marshwood, erebus:door_scorched, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:maple_trap_door, natura:maple_fence_gate, natura:silverbell_trap_door, natura:silverbell_fence_gate, natura:amaranth_trap_door, natura:amaranth_fence_gate, natura:tiger_trap_door, natura:tiger_fence_gate, natura:willow_trap_door, natura:willow_fence_gate, natura:eucalyptus_trap_door, natura:eucalyptus_fence_gate, natura:hopseed_trap_door, natura:hopseed_fence_gate, natura:sakura_trap_door, natura:sakura_fence_gate, natura:redwood_trap_door, natura:redwood_fence_gate, natura:ghostwood_trap_door, natura:ghostwood_fence_gate, natura:bloodwood_trap_door, natura:bloodwood_fence_gate, natura:fusewood_trap_door, natura:fusewood_fence_gate, natura:darkwood_trap_door, natura:darkwood_fence_gate, ancientspellcraft:ice_door, ancientspellcraft:devoritium_door, abyssalcraft:door_dlt, abyssalcraft:door_drt } ]
    S:target_blocks <
        minecraft:wooden_door
        minecraft:iron_door
        minecraft:trapdoor
        minecraft:fence_gate
        minecraft:iron_trapdoor
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        betternether:stalagnate_planks_gate
        betternether:reeds_gate
        betternether:bone_reed_door
        betternether:bone_cincinnasite_door
        biomesoplenty:sacred_oak_fence_gate
        biomesoplenty:cherry_fence_gate
        biomesoplenty:umbran_fence_gate
        biomesoplenty:fir_fence_gate
        biomesoplenty:ethereal_fence_gate
        biomesoplenty:magic_fence_gate
        biomesoplenty:mangrove_fence_gate
        biomesoplenty:palm_fence_gate
        biomesoplenty:redwood_fence_gate
        biomesoplenty:willow_fence_gate
        biomesoplenty:pine_fence_gate
        biomesoplenty:hellbark_fence_gate
        biomesoplenty:jacaranda_fence_gate
        biomesoplenty:mahogany_fence_gate
        biomesoplenty:ebony_fence_gate
        biomesoplenty:eucalyptus_fence_gate
        biomesoplenty:sacred_oak_door_block
        biomesoplenty:cherry_door_block
        biomesoplenty:umbran_door_block
        biomesoplenty:fir_door_block
        biomesoplenty:ethereal_door_block
        biomesoplenty:magic_door_block
        biomesoplenty:mangrove_door_block
        biomesoplenty:palm_door_block
        biomesoplenty:redwood_door_block
        biomesoplenty:willow_door_block
        biomesoplenty:pine_door_block
        biomesoplenty:hellbark_door_block
        biomesoplenty:jacaranda_door_block
        biomesoplenty:mahogany_door_block
        biomesoplenty:ebony_door_block
        biomesoplenty:eucalyptus_door_block
        openblocks:ladder
        advancedrocketry:airlock_door
        securitycraft:iron_door_reinforced
        securitycraft:reinforced_iron_trapdoor
        securitycraft:reinforced_fence_gate
        securitycraft:scanner_door
        securitycraft:keypad_door
        quark:spruce_trapdoor
        quark:birch_trapdoor
        quark:jungle_trapdoor
        quark:acacia_trapdoor
        quark:dark_oak_trapdoor
        quark:nether_brick_fence_gate
        natura:overworld_door_eucalyptus
        natura:overworld_door_hopseed
        natura:overworld_door_sakura
        natura:overworld_door_redwood
        natura:overworld_door_redwood_bark
        natura:overworld_door_tiger
        natura:overworld_door_maple
        natura:overworld_door_silverbell
        natura:nether_door_ghostwood
        natura:nether_door_bloodwood
        natura:nether_door_darkwood
        natura:nether_door_fusewood
        natura:maple_trap_door
        natura:maple_fence_gate
        natura:silverbell_trap_door
        natura:silverbell_fence_gate
        natura:amaranth_trap_door
        natura:amaranth_fence_gate
        natura:tiger_trap_door
        natura:tiger_fence_gate
        natura:willow_trap_door
        natura:willow_fence_gate
        natura:eucalyptus_trap_door
        natura:eucalyptus_fence_gate
        natura:hopseed_trap_door
        natura:hopseed_fence_gate
        natura:sakura_trap_door
        natura:sakura_fence_gate
        natura:redwood_trap_door
        natura:redwood_fence_gate
        natura:ghostwood_trap_door
        natura:ghostwood_fence_gate
        natura:bloodwood_trap_door
        natura:bloodwood_fence_gate
        natura:fusewood_trap_door
        natura:fusewood_fence_gate
        natura:darkwood_trap_door
        natura:darkwood_fence_gate
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        minecraft:zombie 0.05 0.05
        minecraft:skeleton 0.2 0.05
        minecraft:zombie_pigman 0.1 0.05 0.02
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=1.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=20.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=40.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=3.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=0

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=2
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=false

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 1.0
        minecraft:zombie_pigman 1.0
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:tnt, minecraft:wooden_door, minecraft:lever, minecraft:stone_button, minecraft:cake, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:fence_gate, minecraft:wooden_button, minecraft:unpowered_comparator, minecraft:powered_comparator, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, betternether:stalagnate_planks_gate, betternether:stalagnate_planks_button, betternether:reeds_gate, betternether:reeds_button, betternether:cincinnasite_button, betternether:bone_button, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, securitycraft:panic_button, securitycraft:reinforced_stone_button, securitycraft:reinforced_wooden_button, securitycraft:reinforced_lever, quark:iron_button, quark:gold_button, quark:nether_brick_fence_gate, quark:spruce_button, quark:birch_button, quark:jungle_button, quark:acacia_button, quark:dark_oak_button, erebus:door_amber, erebus:door_petrified_wood, erebus:umberstone_button, erebus:door_baobab, erebus:door_eucalyptus, erebus:door_mahogany, erebus:door_mossbark, erebus:door_asper, erebus:door_cypress, erebus:door_rotten, erebus:door_marshwood, erebus:door_scorched, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:nether_lever, natura:nether_button, natura:maple_button, natura:maple_fence_gate, natura:silverbell_button, natura:silverbell_fence_gate, natura:amaranth_button, natura:amaranth_fence_gate, natura:tiger_button, natura:tiger_fence_gate, natura:willow_button, natura:willow_fence_gate, natura:eucalyptus_button, natura:eucalyptus_fence_gate, natura:hopseed_button, natura:hopseed_fence_gate, natura:sakura_button, natura:sakura_fence_gate, natura:redwood_button, natura:redwood_fence_gate, natura:ghostwood_button, natura:ghostwood_fence_gate, natura:bloodwood_button, natura:bloodwood_fence_gate, natura:fusewood_button, natura:fusewood_fence_gate, natura:darkwood_button, natura:darkwood_fence_gate, ancientspellcraft:ice_door, ancientspellcraft:devoritium_door, abyssalcraft:dsbutton, abyssalcraft:dltbutton, abyssalcraft:abybutton, abyssalcraft:cstonebutton, abyssalcraft:door_dlt, abyssalcraft:door_drt } ]
    S:target_blocks <
        minecraft:tnt
        minecraft:wooden_door
        minecraft:lever
        minecraft:stone_button
        minecraft:cake
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:fence_gate
        minecraft:wooden_button
        minecraft:unpowered_comparator
        minecraft:powered_comparator
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        betternether:stalagnate_planks_gate
        betternether:stalagnate_planks_button
        betternether:reeds_gate
        betternether:reeds_button
        betternether:cincinnasite_button
        betternether:bone_button
        betternether:bone_reed_door
        betternether:bone_cincinnasite_door
        biomesoplenty:sacred_oak_fence_gate
        biomesoplenty:cherry_fence_gate
        biomesoplenty:umbran_fence_gate
        biomesoplenty:fir_fence_gate
        biomesoplenty:ethereal_fence_gate
        biomesoplenty:magic_fence_gate
        biomesoplenty:mangrove_fence_gate
        biomesoplenty:palm_fence_gate
        biomesoplenty:redwood_fence_gate
        biomesoplenty:willow_fence_gate
        biomesoplenty:pine_fence_gate
        biomesoplenty:hellbark_fence_gate
        biomesoplenty:jacaranda_fence_gate
        biomesoplenty:mahogany_fence_gate
        biomesoplenty:ebony_fence_gate
        biomesoplenty:eucalyptus_fence_gate
        biomesoplenty:sacred_oak_door_block
        biomesoplenty:cherry_door_block
        biomesoplenty:umbran_door_block
        biomesoplenty:fir_door_block
        biomesoplenty:ethereal_door_block
        biomesoplenty:magic_door_block
        biomesoplenty:mangrove_door_block
        biomesoplenty:palm_door_block
        biomesoplenty:redwood_door_block
        biomesoplenty:willow_door_block
        biomesoplenty:pine_door_block
        biomesoplenty:hellbark_door_block
        biomesoplenty:jacaranda_door_block
        biomesoplenty:mahogany_door_block
        biomesoplenty:ebony_door_block
        biomesoplenty:eucalyptus_door_block
        advancedrocketry:airlock_door
        securitycraft:panic_button
        securitycraft:reinforced_stone_button
        securitycraft:reinforced_wooden_button
        securitycraft:reinforced_lever
        quark:iron_button
        quark:gold_button
        quark:nether_brick_fence_gate
        quark:spruce_button
        quark:birch_button
        quark:jungle_button
        quark:acacia_button
        quark:dark_oak_button
        natura:overworld_door_eucalyptus
        natura:overworld_door_hopseed
        natura:overworld_door_sakura
        natura:overworld_door_redwood
        natura:overworld_door_redwood_bark
        natura:overworld_door_tiger
        natura:overworld_door_maple
        natura:overworld_door_silverbell
        natura:nether_door_ghostwood
        natura:nether_door_bloodwood
        natura:nether_door_darkwood
        natura:nether_door_fusewood
        natura:nether_lever
        natura:nether_button
        natura:maple_button
        natura:maple_fence_gate
        natura:silverbell_button
        natura:silverbell_fence_gate
        natura:amaranth_button
        natura:amaranth_fence_gate
        natura:tiger_button
        natura:tiger_fence_gate
        natura:willow_button
        natura:willow_fence_gate
        natura:eucalyptus_button
        natura:eucalyptus_fence_gate
        natura:hopseed_button
        natura:hopseed_fence_gate
        natura:sakura_button
        natura:sakura_fence_gate
        natura:redwood_button
        natura:redwood_fence_gate
        natura:ghostwood_button
        natura:ghostwood_fence_gate
        natura:bloodwood_button
        natura:bloodwood_fence_gate
        natura:fusewood_button
        natura:fusewood_fence_gate
        natura:darkwood_button
        natura:darkwood_fence_gate
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=false

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=false

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.5

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=false

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:creeper 1.0
        minecraft:zombie_pigman 1.0
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=false

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:target_blacklist <
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:bed, minecraft:golden_rail, minecraft:crafting_table, minecraft:farmland, minecraft:furnace, minecraft:lit_furnace, minecraft:ladder, minecraft:enchanting_table, minecraft:brewing_stand, betternether:reeds_ladder, erebus:bamboo_ladder, ancientspellcraft:ice_crafting_table } ]
    S:target_blocks <
        minecraft:bed
        minecraft:golden_rail
        minecraft:crafting_table
        minecraft:farmland
        minecraft:furnace
        minecraft:lit_furnace
        minecraft:ladder
        minecraft:enchanting_table
        minecraft:brewing_stand
        betternether:reeds_ladder
        advancedrocketry:astrobed
     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:chest, minecraft:trapped_chest, quark:custom_chest, quark:custom_chest_trap } ]
    S:target_lootable <
        minecraft:chest
        minecraft:trapped_chest
        quark:custom_chest
        quark:custom_chest_trap
     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
        minecraft:spider
        minecraft:slime
        minecraft:pig
        minecraft:sheep
        minecraft:cow
        minecraft:polar_bear
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
        minecraft:chicken
        minecraft:rabbit
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
        minecraft:zombie 0.05
        minecraft:skeleton 0.1
        minecraft:creeper 0.05
        minecraft:witch 0.05
        minecraft:zombie_pigman 0.1
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.2

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.4
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.1

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:stone, minecraft:grass, minecraft:dirt, minecraft:sapling, minecraft:sand, minecraft:leaves, minecraft:golden_rail, minecraft:detector_rail, minecraft:web, minecraft:tallgrass, minecraft:deadbush, minecraft:yellow_flower, minecraft:red_flower, minecraft:brown_mushroom, minecraft:red_mushroom, minecraft:tnt, minecraft:redstone_wire, minecraft:wheat, minecraft:wooden_door, minecraft:rail, minecraft:iron_door, minecraft:unlit_redstone_torch, minecraft:snow_layer, minecraft:ice, minecraft:cactus, minecraft:reeds, minecraft:pumpkin, minecraft:lit_pumpkin, minecraft:unpowered_repeater, minecraft:powered_repeater, minecraft:brown_mushroom_block, minecraft:red_mushroom_block, minecraft:melon_block, minecraft:pumpkin_stem, minecraft:melon_stem, minecraft:vine, minecraft:fence_gate, minecraft:mycelium, minecraft:waterlily, minecraft:nether_wart, minecraft:cocoa, minecraft:tripwire_hook, minecraft:tripwire, minecraft:flower_pot, minecraft:carrots, minecraft:potatoes, minecraft:unpowered_comparator, minecraft:activator_rail, minecraft:leaves2, minecraft:slime, minecraft:packed_ice, minecraft:double_plant, minecraft:spruce_fence_gate, minecraft:birch_fence_gate, minecraft:jungle_fence_gate, minecraft:dark_oak_fence_gate, minecraft:acacia_fence_gate, minecraft:spruce_door, minecraft:birch_door, minecraft:jungle_door, minecraft:acacia_door, minecraft:dark_oak_door, minecraft:beetroots, minecraft:frosted_ice, minecraft:structure_void, minecraft:white_shulker_box, minecraft:orange_shulker_box, minecraft:magenta_shulker_box, minecraft:light_blue_shulker_box, minecraft:yellow_shulker_box, minecraft:lime_shulker_box, minecraft:pink_shulker_box, minecraft:gray_shulker_box, minecraft:silver_shulker_box, minecraft:cyan_shulker_box, minecraft:purple_shulker_box, minecraft:blue_shulker_box, minecraft:brown_shulker_box, minecraft:green_shulker_box, minecraft:red_shulker_box, minecraft:black_shulker_box, betternether:eye_vine, betternether:eye_seed, betternether:nether_grass, betternether:nether_reed, betternether:stalagnate_stem, betternether:stalagnate_seed, betternether:stalagnate_seed_bottom, betternether:stalagnate_planks_gate, betternether:reeds_gate, betternether:lucis_spore, betternether:nether_cactus, betternether:wart_seed, betternether:barrel_cactus, betternether:agave, betternether:ink_bush_seed, betternether:black_apple_seed, betternether:orange_mushroom, betternether:red_mold, betternether:gray_mold, betternether:bone_mushroom, betternether:bone_reed_door, betternether:bone_cincinnasite_door, biomesoplenty:grass, biomesoplenty:leaves_0, biomesoplenty:leaves_1, biomesoplenty:leaves_2, biomesoplenty:leaves_3, biomesoplenty:leaves_4, biomesoplenty:leaves_5, biomesoplenty:leaves_6, biomesoplenty:sacred_oak_fence_gate, biomesoplenty:cherry_fence_gate, biomesoplenty:umbran_fence_gate, biomesoplenty:fir_fence_gate, biomesoplenty:ethereal_fence_gate, biomesoplenty:magic_fence_gate, biomesoplenty:mangrove_fence_gate, biomesoplenty:palm_fence_gate, biomesoplenty:redwood_fence_gate, biomesoplenty:willow_fence_gate, biomesoplenty:pine_fence_gate, biomesoplenty:hellbark_fence_gate, biomesoplenty:jacaranda_fence_gate, biomesoplenty:mahogany_fence_gate, biomesoplenty:ebony_fence_gate, biomesoplenty:eucalyptus_fence_gate, biomesoplenty:sacred_oak_door_block, biomesoplenty:cherry_door_block, biomesoplenty:umbran_door_block, biomesoplenty:fir_door_block, biomesoplenty:ethereal_door_block, biomesoplenty:magic_door_block, biomesoplenty:mangrove_door_block, biomesoplenty:palm_door_block, biomesoplenty:redwood_door_block, biomesoplenty:willow_door_block, biomesoplenty:pine_door_block, biomesoplenty:hellbark_door_block, biomesoplenty:jacaranda_door_block, biomesoplenty:mahogany_door_block, biomesoplenty:ebony_door_block, biomesoplenty:eucalyptus_door_block, biomesoplenty:seaweed, biomesoplenty:waterlily, biomesoplenty:sapling_0, biomesoplenty:sapling_1, biomesoplenty:sapling_2, biomesoplenty:plant_0, biomesoplenty:plant_1, biomesoplenty:double_plant, biomesoplenty:mushroom, biomesoplenty:flower_0, biomesoplenty:flower_1, biomesoplenty:ivy, biomesoplenty:willow_vine, hammercore:lying_item, hammercore:multipart, naturesaura:ancient_leaves, naturesaura:ancient_sapling, naturesaura:golden_leaves, naturesaura:gold_powder, naturesaura:end_flower, naturesaura:dimension_rail_overworld, naturesaura:dimension_rail_nether, naturesaura:dimension_rail_end, openblocks:flag, openblocks:paint_can, 113_water_mechanics:downwards_bubble_column, 113_water_mechanics:upwards_bubble_column, securitycraft:iron_door_reinforced, securitycraft:bogus_water_flowing, securitycraft:track_mine, securitycraft:reinforced_stone, securitycraft:reinforced_dirt, securitycraft:reinforced_fence_gate, securitycraft:scanner_door, securitycraft:reinforced_grass, securitycraft:reinforced_mycelium, securitycraft:keypad_door, appliedenergistics2:tiny_tnt, quark:redstone_randomizer, quark:color_slime, quark:redstone_inductor, quark:roots, quark:roots_blue_flower, quark:roots_black_flower, quark:roots_white_flower, quark:variant_leaves, quark:variant_sapling, quark:glowshroom, quark:colored_flowerpot_white, quark:colored_flowerpot_orange, quark:colored_flowerpot_magenta, quark:colored_flowerpot_light_blue, quark:colored_flowerpot_yellow, quark:colored_flowerpot_lime, quark:colored_flowerpot_pink, quark:colored_flowerpot_gray, quark:colored_flowerpot_silver, quark:colored_flowerpot_cyan, quark:colored_flowerpot_purple, quark:colored_flowerpot_blue, quark:colored_flowerpot_brown, quark:colored_flowerpot_green, quark:colored_flowerpot_red, quark:colored_flowerpot_black, quark:nether_brick_fence_gate, quark:gunpowder_block, quark:black_ash, bno:block_copper, bno:block_tin, ebwizardry:crystal_flower, ebwizardry:snare, ebwizardry:thorns, ebwizardry:obsidian_crust, ebwizardry:dry_frosted_ice, ebwizardry:permafrost, mekanism:obsidiantnt, dragonmounts:dragon_egg, erebus:dust_layer, erebus:dust, erebus:door_amber, erebus:swamp_vent, erebus:crop_turnip, erebus:crop_cabbage, erebus:crop_mandrake, erebus:dark_fruit_vine, erebus:prickly_pear, erebus:giant_flower, erebus:planted_flower, erebus:small_plant, erebus:thorns, erebus:hanging_web, erebus:double_plant, erebus:wall_plants, erebus:wall_plants_cultivated, erebus:algae, erebus:dark_capped_mushroom, erebus:sarcastic_czech_mushroom, erebus:grandmas_shoes_mushroom, erebus:dutch_cap_mushroom, erebus:kaizers_fingers_mushroom, erebus:dark_capped_mushroom_block, erebus:sarcastic_czech_mushroom_block, erebus:grandmas_shoes_mushroom_block, erebus:dutch_cap_mushroom_block, erebus:kaizers_fingers_mushroom_block, erebus:wither_web, erebus:door_petrified_wood, erebus:insect_repellent, erebus:petrified_wood_chest, erebus:glow_gem_inactive, erebus:mucus_bomb, erebus:block_of_bones, erebus:honey, erebus:sapling_baobab, erebus:leaves_baobab, erebus:door_baobab, erebus:sapling_eucalyptus, erebus:leaves_eucalyptus, erebus:door_eucalyptus, erebus:sapling_mahogany, erebus:leaves_mahogany, erebus:door_mahogany, erebus:sapling_mossbark, erebus:leaves_mossbark, erebus:door_mossbark, erebus:sapling_asper, erebus:leaves_asper, erebus:door_asper, erebus:sapling_cypress, erebus:leaves_cypress, erebus:door_cypress, erebus:sapling_balsam, erebus:leaves_balsam, erebus:log_bamboo, erebus:sapling_bamboo, erebus:door_rotten, erebus:sapling_marshwood, erebus:leaves_marshwood, erebus:door_marshwood, erebus:door_scorched, golems:golem_head, mod_lavacow:glowshroom, mod_lavacow:pileofsludge, mod_lavacow:glowshroom_block_stem, mod_lavacow:glowshroom_block_cap, mod_lavacow:bloodtooth_shroom, mod_lavacow:cordy_shroom, mod_lavacow:veil_shroom, mod_lavacow:scarecrowhead_common, mod_lavacow:scarecrowhead_straw, mod_lavacow:scarecrowhead_plague, gb:globplant, gb:glob2plant, gb:glob3plant, natura:overworld_leaves, natura:overworld_leaves2, natura:redwood_leaves, natura:overworld_sapling, natura:overworld_sapling2, natura:redwood_sapling, natura:bluebells_flower, natura:overworld_berrybush_raspberry, natura:overworld_berrybush_blueberry, natura:overworld_berrybush_blackberry, natura:overworld_berrybush_maloberry, natura:barley_crop, natura:cotton_crop, natura:overworld_door_eucalyptus, natura:overworld_door_hopseed, natura:overworld_door_sakura, natura:overworld_door_redwood, natura:overworld_door_redwood_bark, natura:overworld_door_tiger, natura:overworld_door_maple, natura:overworld_door_silverbell, natura:saguaro, natura:saguaro_baby, natura:nether_leaves, natura:nether_leaves2, natura:nether_sapling, natura:nether_sapling2, natura:nether_thorn_vines, natura:nether_berrybush_blightberry, natura:nether_berrybush_duskberry, natura:nether_berrybush_skyberry, natura:nether_berrybush_stingberry, natura:nether_glowshroom, natura:nether_door_ghostwood, natura:nether_door_bloodwood, natura:nether_door_darkwood, natura:nether_door_fusewood, natura:blaze_rail, natura:blaze_rail_golden, natura:blaze_rail_activator, natura:blaze_rail_detector, natura:maple_fence_gate, natura:silverbell_fence_gate, natura:amaranth_fence_gate, natura:tiger_fence_gate, natura:willow_fence_gate, natura:eucalyptus_fence_gate, natura:hopseed_fence_gate, natura:sakura_fence_gate, natura:redwood_fence_gate, natura:ghostwood_fence_gate, natura:bloodwood_fence_gate, natura:fusewood_fence_gate, natura:darkwood_fence_gate, rare-ice:rare_ice, t3s4ebw:crystal_crop, tenshilib:ignore, tenshilib:structure_piece, underwaterrails:basic_underwater_rail, underwaterrails:advanced_underwater_rail, ancientspellcraft:snow_double_slab, ancientspellcraft:snow_slab, ancientspellcraft:ice_door, ancientspellcraft:hard_frosted_ice, ancientspellcraft:devoritium_door, ancientspellcraft:leaves_crystal_tree, ancientspellcraft:rune_used, ancientspellcraft:mushroom_fire, ancientspellcraft:mushroom_poison, ancientspellcraft:mushroom_ice, ancientspellcraft:mushroom_wither, ancientspellcraft:mushroom_force, ancientspellcraft:mushroom_healing, ancientspellcraft:mushroom_shocking, ancientspellcraft:mushroom_mind, ancientspellcraft:mushroom_cleansing, ancientspellcraft:mushroom_explosive, ancientspellcraft:mushroom_empowering, ancientspellcraft:arcane_anvil, ocsensors:sensor, abyssalcraft:dltleaves, abyssalcraft:dltsapling, abyssalcraft:dreadgrass, abyssalcraft:dreadleaves, abyssalcraft:dreadsapling, abyssalcraft:dreadguardspawner, abyssalcraft:chagarothspawner, abyssalcraft:jzaharspawner, abyssalcraft:gatekeeperminionspawner, abyssalcraft:fire, abyssalcraft:luminousthistle, abyssalcraft:wastelandsthorn, abyssalcraft:door_dlt, abyssalcraft:door_drt, buildcraftenergy:fluid_block_oil_heat_0, buildcraftenergy:fluid_block_oil_heat_1, buildcraftenergy:fluid_block_oil_heat_2, buildcraftenergy:fluid_block_oil_residue_heat_0, buildcraftenergy:fluid_block_oil_residue_heat_1, buildcraftenergy:fluid_block_oil_residue_heat_2, buildcraftenergy:fluid_block_oil_heavy_heat_0, buildcraftenergy:fluid_block_oil_heavy_heat_1, buildcraftenergy:fluid_block_oil_heavy_heat_2, buildcraftenergy:fluid_block_oil_dense_heat_0, buildcraftenergy:fluid_block_oil_dense_heat_1, buildcraftenergy:fluid_block_oil_dense_heat_2, buildcraftenergy:fluid_block_oil_distilled_heat_0, buildcraftenergy:fluid_block_oil_distilled_heat_1, buildcraftenergy:fluid_block_oil_distilled_heat_2, buildcraftenergy:fluid_block_fuel_dense_heat_0, buildcraftenergy:fluid_block_fuel_dense_heat_1, buildcraftenergy:fluid_block_fuel_dense_heat_2, buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_0, buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_1, buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_2, buildcraftenergy:fluid_block_fuel_light_heat_0, buildcraftenergy:fluid_block_fuel_light_heat_1, buildcraftenergy:fluid_block_fuel_light_heat_2, buildcraftenergy:fluid_block_fuel_mixed_light_heat_0, buildcraftenergy:fluid_block_fuel_mixed_light_heat_1, buildcraftenergy:fluid_block_fuel_mixed_light_heat_2, buildcraftenergy:fluid_block_fuel_gaseous_heat_0, buildcraftenergy:fluid_block_fuel_gaseous_heat_1, buildcraftenergy:fluid_block_fuel_gaseous_heat_2, contenttweaker:coolliquid } ]
    S:block_blacklist <
        minecraft:stone
        minecraft:grass
        minecraft:dirt
        minecraft:sapling
        minecraft:sand
        minecraft:leaves
        minecraft:golden_rail
        minecraft:detector_rail
        minecraft:web
        minecraft:tallgrass
        minecraft:deadbush
        minecraft:yellow_flower
        minecraft:red_flower
        minecraft:brown_mushroom
        minecraft:red_mushroom
        minecraft:tnt
        minecraft:redstone_wire
        minecraft:wheat
        minecraft:wooden_door
        minecraft:rail
        minecraft:iron_door
        minecraft:unlit_redstone_torch
        minecraft:snow_layer
        minecraft:ice
        minecraft:cactus
        minecraft:reeds
        minecraft:pumpkin
        minecraft:lit_pumpkin
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:brown_mushroom_block
        minecraft:red_mushroom_block
        minecraft:melon_block
        minecraft:pumpkin_stem
        minecraft:melon_stem
        minecraft:vine
        minecraft:fence_gate
        minecraft:mycelium
        minecraft:waterlily
        minecraft:nether_wart
        minecraft:cocoa
        minecraft:tripwire_hook
        minecraft:tripwire
        minecraft:flower_pot
        minecraft:carrots
        minecraft:potatoes
        minecraft:unpowered_comparator
        minecraft:activator_rail
        minecraft:leaves2
        minecraft:slime
        minecraft:packed_ice
        minecraft:double_plant
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        minecraft:beetroots
        minecraft:frosted_ice
        minecraft:structure_void
        minecraft:white_shulker_box
        minecraft:orange_shulker_box
        minecraft:magenta_shulker_box
        minecraft:light_blue_shulker_box
        minecraft:yellow_shulker_box
        minecraft:lime_shulker_box
        minecraft:pink_shulker_box
        minecraft:gray_shulker_box
        minecraft:silver_shulker_box
        minecraft:cyan_shulker_box
        minecraft:purple_shulker_box
        minecraft:blue_shulker_box
        minecraft:brown_shulker_box
        minecraft:green_shulker_box
        minecraft:red_shulker_box
        minecraft:black_shulker_box
        betternether:eye_vine
        betternether:eye_seed
        betternether:nether_grass
        betternether:nether_reed
        betternether:stalagnate_stem
        betternether:stalagnate_seed
        betternether:stalagnate_seed_bottom
        betternether:stalagnate_planks_gate
        betternether:reeds_gate
        betternether:lucis_spore
        betternether:nether_cactus
        betternether:wart_seed
        betternether:barrel_cactus
        betternether:agave
        betternether:ink_bush_seed
        betternether:black_apple_seed
        betternether:orange_mushroom
        betternether:red_mold
        betternether:gray_mold
        betternether:bone_mushroom
        betternether:bone_reed_door
        betternether:bone_cincinnasite_door
        biomesoplenty:grass
        biomesoplenty:leaves_0
        biomesoplenty:leaves_1
        biomesoplenty:leaves_2
        biomesoplenty:leaves_3
        biomesoplenty:leaves_4
        biomesoplenty:leaves_5
        biomesoplenty:leaves_6
        biomesoplenty:sacred_oak_fence_gate
        biomesoplenty:cherry_fence_gate
        biomesoplenty:umbran_fence_gate
        biomesoplenty:fir_fence_gate
        biomesoplenty:ethereal_fence_gate
        biomesoplenty:magic_fence_gate
        biomesoplenty:mangrove_fence_gate
        biomesoplenty:palm_fence_gate
        biomesoplenty:redwood_fence_gate
        biomesoplenty:willow_fence_gate
        biomesoplenty:pine_fence_gate
        biomesoplenty:hellbark_fence_gate
        biomesoplenty:jacaranda_fence_gate
        biomesoplenty:mahogany_fence_gate
        biomesoplenty:ebony_fence_gate
        biomesoplenty:eucalyptus_fence_gate
        biomesoplenty:sacred_oak_door_block
        biomesoplenty:cherry_door_block
        biomesoplenty:umbran_door_block
        biomesoplenty:fir_door_block
        biomesoplenty:ethereal_door_block
        biomesoplenty:magic_door_block
        biomesoplenty:mangrove_door_block
        biomesoplenty:palm_door_block
        biomesoplenty:redwood_door_block
        biomesoplenty:willow_door_block
        biomesoplenty:pine_door_block
        biomesoplenty:hellbark_door_block
        biomesoplenty:jacaranda_door_block
        biomesoplenty:mahogany_door_block
        biomesoplenty:ebony_door_block
        biomesoplenty:eucalyptus_door_block
        biomesoplenty:seaweed
        biomesoplenty:waterlily
        biomesoplenty:sapling_0
        biomesoplenty:sapling_1
        biomesoplenty:sapling_2
        biomesoplenty:plant_0
        biomesoplenty:plant_1
        biomesoplenty:double_plant
        biomesoplenty:mushroom
        biomesoplenty:flower_0
        biomesoplenty:flower_1
        biomesoplenty:ivy
        biomesoplenty:willow_vine
        hammercore:lying_item
        hammercore:multipart
        openblocks:flag
        openblocks:paint_can
        libvulpes:blockphantom
        advancedrocketry:quartzcrucible
        advancedrocketry:alienleaves
        advancedrocketry:aliensapling
        advancedrocketry:airlock_door
        advancedrocketry:unlittorch
        advancedrocketry:oxygenfluid
        advancedrocketry:hydrogenfluid
        advancedrocketry:rocketfuel
        advancedrocketry:nitrogenfluid
        advancedrocketry:electricmushroom
        securitycraft:iron_door_reinforced
        securitycraft:bogus_water_flowing
        securitycraft:track_mine
        securitycraft:reinforced_stone
        securitycraft:reinforced_dirt
        securitycraft:reinforced_fence_gate
        securitycraft:scanner_door
        securitycraft:reinforced_grass
        securitycraft:reinforced_mycelium
        securitycraft:keypad_door
        appliedenergistics2:tiny_tnt
        quark:roots
        quark:roots_blue_flower
        quark:roots_black_flower
        quark:roots_white_flower
        quark:variant_leaves
        quark:variant_sapling
        quark:glowshroom
        quark:redstone_randomizer
        quark:color_slime
        quark:redstone_inductor
        quark:colored_flowerpot_white
        quark:colored_flowerpot_orange
        quark:colored_flowerpot_magenta
        quark:colored_flowerpot_light_blue
        quark:colored_flowerpot_yellow
        quark:colored_flowerpot_lime
        quark:colored_flowerpot_pink
        quark:colored_flowerpot_gray
        quark:colored_flowerpot_silver
        quark:colored_flowerpot_cyan
        quark:colored_flowerpot_purple
        quark:colored_flowerpot_blue
        quark:colored_flowerpot_brown
        quark:colored_flowerpot_green
        quark:colored_flowerpot_red
        quark:colored_flowerpot_black
        quark:nether_brick_fence_gate
        quark:gunpowder_block
        quark:black_ash
        coroutil:blank
        mod_lavacow:glowshroom
        mod_lavacow:pileofsludge
        mod_lavacow:glowshroom_block_stem
        mod_lavacow:glowshroom_block_cap
        mod_lavacow:bloodtooth_shroom
        mod_lavacow:cordy_shroom
        mod_lavacow:veil_shroom
        mod_lavacow:scarecrowhead_common
        mod_lavacow:scarecrowhead_straw
        mod_lavacow:scarecrowhead_plague
        mekanism:obsidiantnt
        natura:overworld_leaves
        natura:overworld_leaves2
        natura:redwood_leaves
        natura:overworld_sapling
        natura:overworld_sapling2
        natura:redwood_sapling
        natura:bluebells_flower
        natura:overworld_berrybush_raspberry
        natura:overworld_berrybush_blueberry
        natura:overworld_berrybush_blackberry
        natura:overworld_berrybush_maloberry
        natura:barley_crop
        natura:cotton_crop
        natura:overworld_door_eucalyptus
        natura:overworld_door_hopseed
        natura:overworld_door_sakura
        natura:overworld_door_redwood
        natura:overworld_door_redwood_bark
        natura:overworld_door_tiger
        natura:overworld_door_maple
        natura:overworld_door_silverbell
        natura:saguaro
        natura:saguaro_baby
        natura:nether_leaves
        natura:nether_leaves2
        natura:nether_sapling
        natura:nether_sapling2
        natura:nether_thorn_vines
        natura:nether_berrybush_blightberry
        natura:nether_berrybush_duskberry
        natura:nether_berrybush_skyberry
        natura:nether_berrybush_stingberry
        natura:nether_glowshroom
        natura:nether_door_ghostwood
        natura:nether_door_bloodwood
        natura:nether_door_darkwood
        natura:nether_door_fusewood
        natura:blaze_rail
        natura:blaze_rail_golden
        natura:blaze_rail_activator
        natura:blaze_rail_detector
        natura:maple_fence_gate
        natura:silverbell_fence_gate
        natura:amaranth_fence_gate
        natura:tiger_fence_gate
        natura:willow_fence_gate
        natura:eucalyptus_fence_gate
        natura:hopseed_fence_gate
        natura:sakura_fence_gate
        natura:redwood_fence_gate
        natura:ghostwood_fence_gate
        natura:bloodwood_fence_gate
        natura:fusewood_fence_gate
        natura:darkwood_fence_gate
        netherendingores:creative_tab
        tenshilib:ignore
        tenshilib:structure_piece
        weather2:sand_layer
        buildcraftenergy:fluid_block_oil_heat_0
        buildcraftenergy:fluid_block_oil_heat_1
        buildcraftenergy:fluid_block_oil_heat_2
        buildcraftenergy:fluid_block_oil_residue_heat_0
        buildcraftenergy:fluid_block_oil_residue_heat_1
        buildcraftenergy:fluid_block_oil_residue_heat_2
        buildcraftenergy:fluid_block_oil_heavy_heat_0
        buildcraftenergy:fluid_block_oil_heavy_heat_1
        buildcraftenergy:fluid_block_oil_heavy_heat_2
        buildcraftenergy:fluid_block_oil_dense_heat_0
        buildcraftenergy:fluid_block_oil_dense_heat_1
        buildcraftenergy:fluid_block_oil_dense_heat_2
        buildcraftenergy:fluid_block_oil_distilled_heat_0
        buildcraftenergy:fluid_block_oil_distilled_heat_1
        buildcraftenergy:fluid_block_oil_distilled_heat_2
        buildcraftenergy:fluid_block_fuel_dense_heat_0
        buildcraftenergy:fluid_block_fuel_dense_heat_1
        buildcraftenergy:fluid_block_fuel_dense_heat_2
        buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_0
        buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_1
        buildcraftenergy:fluid_block_fuel_mixed_heavy_heat_2
        buildcraftenergy:fluid_block_fuel_light_heat_0
        buildcraftenergy:fluid_block_fuel_light_heat_1
        buildcraftenergy:fluid_block_fuel_light_heat_2
        buildcraftenergy:fluid_block_fuel_mixed_light_heat_0
        buildcraftenergy:fluid_block_fuel_mixed_light_heat_1
        buildcraftenergy:fluid_block_fuel_mixed_light_heat_2
        buildcraftenergy:fluid_block_fuel_gaseous_heat_0
        buildcraftenergy:fluid_block_fuel_gaseous_heat_1
        buildcraftenergy:fluid_block_fuel_gaseous_heat_2
        contenttweaker:liquidiron
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.15

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=1.0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ minecraft:emerald_block, minecraft:bookshelf, minecraft:farmland, minecraft:cake } ]
    S:block_treasured_list <
        minecraft:emerald_block
        minecraft:bookshelf
        minecraft:farmland
        minecraft:cake
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=1.0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={  } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=true

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0.2

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=true

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=true

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=true

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=true

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=true

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=true

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=true
}


